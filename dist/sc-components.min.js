/**
 * sc-components
 * Simple reusable angular UI components
 * @version 0.1.1
 * Copyright(c) SafetyChanger
 * @license MIT
 */

"use strict";angular.module("sc-components",["sc-confirm","sc-dropdown","sc-enter","sc-list","sc-listing"]),angular.module("sc-confirm",["ui.bootstrap"]).constant("scConfirmDefaults",{message:"Are you sure ?",btnPlacement:"right"}).directive("scConfirm",["$modal","$compile","$parse","$http","$q","$templateCache","scConfirmDefaults",function($modal,$compile,$parse,$http,$q,$templateCache,defaults){return{restrict:"A",scope:{scConfirm:"&",scOnCancel:"&"},link:function(scope,element,attrs){var btnPlacement,template,templateUrl,isDefined=angular.isDefined,deferred=$q.defer(),promise=deferred.promise,validPlacements=["left","center","right"];isDefined(attrs.template)?(template=scope.$parent.$eval(attrs.template),deferred.resolve(template)):isDefined(attrs.templateUrl)?(templateUrl=scope.$parent.$eval(attrs.templateUrl),$http.get(templateUrl,{cache:$templateCache}).success(function(html){deferred.resolve(html)}).error(deferred.reject)):deferred.resolve(""),isDefined(attrs.btnPlacement)&&(btnPlacement=scope.$parent.$eval(attrs.btnPlacement)),~validPlacements.indexOf(btnPlacement)||(btnPlacement=defaults.btnPlacement),promise.then(function(tpl){var message=attrs.scConfirmMessage||defaults.message,modalHtml=['<div class="modal-header">','  <button type="button" class="close" ng-click="cancel()" aria-hidden="true">&times;</button>','  <h4 class="modal-title">'+message+"</h4>","</div>",'<div class="modal-body">',"  "+tpl+"&nbsp;","</div>",'<div class="modal-footer sc-'+btnPlacement+'">','  <button class="btn btn-primary" ng-click="ok()">Yes</button>','  <button class="btn btn-link" ng-click="cancel()">Cancel</button>',"</div>"].join("\n");element.bind("click",function(){var modalInstance=$modal.open({template:modalHtml,controller:"ModalInstanceCtrl",scope:scope.$parent,resolve:{scOnCancel:function(){return scope.scOnCancel}}});modalInstance.result.then(scope.scConfirm)})})}}}]).controller("ModalInstanceCtrl",["$scope","$modalInstance","scOnCancel",function($scope,$modalInstance,scOnCancel){$scope.ok=$modalInstance.close,$scope.cancel=function(){$scope.$parent.$eval(scOnCancel),$modalInstance.dismiss("cancel")}}]),angular.module("sc-dropdown",["sc-listing","ui.bootstrap"]).constant("scDropdownDefaults",{btnClass:"btn btn-",btnDefault:"link",type:"simple",label:"Choose from the list"}).directive("scDropdown",["$compile","scDropdownDefaults",function($compile,defaults){return{restrict:"E",scope:{items:"="},link:function(scope,element,attrs){var labelTpl,isDefined=angular.isDefined,isFunction=angular.isFunction,validTypes=["simple","single","split"],dropdown={},btnClass=defaults.btnClass,btnDefault=defaults.btnDefault,type=defaults.type,label=defaults.label,attribute=scope.$parent.$eval(attrs.attribute);isDefined(attrs.type)&&(type=scope.$parent.$eval(attrs.type),type=~validTypes.indexOf(type)?type:"simple"),isDefined(attrs.label)&&(scope.label=scope.$parent.$eval(attrs.label)),isDefined(attrs.default)&&(label=scope.$parent.$eval(attrs.default),scope.item=isFunction(label)?label():label,label=scope.item),scope.label=scope.label||label,isDefined(attrs.btnClass)&&(btnDefault=scope.$parent.$eval(attrs.btnClass)),btnClass+=btnDefault;var onSelect=scope.$parent.$eval(attrs.onSelect);"string"!=typeof scope.items[0]?(labelTpl="{{ item['"+attribute+"'] || label }}",scope.template="<a href>{{ item['"+attribute+"'] }}</a>"):(labelTpl="{{ item || label }}",scope.template="<a href>{{ item }}</a>"),scope.select=function(item){scope.item=item,onSelect(item)};var listing=['  <sc-listing class="dropdown-menu"','    items="items"','    on-item-click="select"','    template="template">',"  </sc-listing>"].join("");dropdown.simple=['<span class="dropdown">','  <a href class="dropdown-toggle">',"    "+labelTpl,"  </a>","  "+listing,"</span>"].join(""),dropdown.single=['<div class="btn-group" dropdown>','  <button type="button" class="'+btnClass+' dropdown-toggle">',"    "+labelTpl+' <span class="caret"></span>',"  </button>","  "+listing,"</div>"].join(""),dropdown.split=['<div class="btn-group" dropdown>','  <button type="button" class="'+btnClass+'">'+labelTpl+"</button>",'  <button type="button" class="'+btnClass+' dropdown-toggle">','    <span class="caret"></span>',"  </button>","  "+listing,"</div>"].join(""),element.replaceWith($compile(dropdown[type])(scope))}}}]),angular.module("sc-enter",[]).directive("scEnter",function(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.scEnter,{event:event})}),event.preventDefault())})}}),angular.module("sc-list",[]).constant("scListDefaults",{limit:20,page:0,sort_type:1}).factory("scList",["scListDefaults",function(defaults){function List(Resource,options){if(!Resource||"Resource"!==Resource.prototype.constructor.name)throw new Error("Resource must be an instance of $resource");if("function"!=typeof Resource.query)throw new Error("Resource must have a query function");options=options||{},this.options={},this.options.limit=options.limit||defaults.limit,this.options.filter=options.filter,this.options.page=options.page||defaults.page,this.options.sort_by=options.sort_by,this.options.sort_type=options.sort_type||defaults.sort_type,this.Resource=Resource}return List.prototype.sort=function(field,type){return this.options.sort_type=-1*parseInt(this.options.sort_type,10),this.fetch({sort_type:type*this.options.sort_type,sort_by:field})},List.prototype.goto=function(page){return this.options.page=parseInt(page,10),this.fetch()},List.prototype.refresh=List.prototype.fetch=function(options){return options=options||{},options.limit=options.limit||this.options.limit,options.filter=options.filter||this.options.filter,options.page=options.page||this.options.page,options.sort_by=options.sort_by||this.options.sort_by,options.sort_type=options.sort_type||this.options.sort_type,this.options=options,this.items=this.Resource.query(this.options),this.$promise=this.items.$promise,this.items},List}]),angular.module("sc-listing",[]).directive("scListing",function($compile,$http,$q,$templateCache){return{restrict:"E",scope:{items:"="},link:function(scope,element,attrs){var template,templateUrl,isDefined=angular.isDefined,deferred=$q.defer(),promise=deferred.promise,classes=["list"],itemClass=["list-item"];isDefined(attrs.onItemClick)&&(scope.onItemClick=scope.$parent.$eval(attrs.onItemClick)),isDefined(attrs.template)?(template=scope.$parent.$eval(attrs.template),deferred.resolve(template)):isDefined(attrs.templateUrl)?(templateUrl=scope.$parent.$eval(attrs.templateUrl),$http.get(templateUrl,{cache:$templateCache}).success(function(html){deferred.resolve(html)}).error(deferred.reject)):deferred.resolve(""),isDefined(attrs.class)&&classes.push(attrs.class),isDefined(attrs.itemClass)&&itemClass.push(scope.$parent.$eval(attrs.itemClass)),classes=classes.join(" "),itemClass=itemClass.join(" "),promise.then(function(tpl){tpl=tpl||"{{ item | json }}";var template=['<ul class="'+classes+'">','  <li class="'+itemClass+'" ng-repeat="item in items" ng-click="onItemClick(item, $index)">',"    "+tpl,"  </li>","</ul>"].join("");element.replaceWith($compile(template)(scope))})}}});//# sourceMappingURL=sc-components.js.map